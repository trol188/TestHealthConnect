Include 

/// This class is generated by the Demo.Loan.FindRateDecisionProcessBPL BPL class.
/// This class should not be edited or modified in any way.
/// Do not make direct use of this class in your application.
Class Demo.Loan.FindRateDecisionProcessBPL.Context Extends Ens.BP.Context [ ClassType = persistent, CompileAfter = Demo.Loan.FindRateDecisionProcessBPL, GeneratedBy = Ens.BPL.Compiler.CLS ]
{

Property BankName As %String(MAXLEN = "");

Property InterestRate As %Numeric;

Property IsApproved As %Boolean;

Property Iterator As %String;

Property TheResults As list Of Demo.Loan.Msg.Approval;

Property ThisResult As Demo.Loan.Msg.Approval;

/// Response Handler for call to Demo.Loan.BankUS
Method OnResponse1(process As Ens.BusinessProcess, context As Ens.BP.Context, request As Demo.Loan.Msg.Application, response, callrequest As Demo.Loan.Msg.Application, callresponse As Demo.Loan.Msg.Approval, callname As %String) As %Status [ Language = cache, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=context.TheResults.Insert(callresponse)
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("Demo.Loan.FindRateDecisionProcessBPL.Thread1","OnResponse1")
 Goto Exit
}

/// Response Handler for call to Demo.Loan.BankSoprano
Method OnResponse2(process As Ens.BusinessProcess, context As Ens.BP.Context, request As Demo.Loan.Msg.Application, response, callrequest As Demo.Loan.Msg.Application, callresponse As Demo.Loan.Msg.Approval, callname As %String) As %Status [ Language = cache, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=context.TheResults.Insert(callresponse)
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("Demo.Loan.FindRateDecisionProcessBPL.Thread1","OnResponse2")
 Goto Exit
}

/// Response Handler for call to Demo.Loan.BankManana
Method OnResponse3(process As Ens.BusinessProcess, context As Ens.BP.Context, request As Demo.Loan.Msg.Application, response, callrequest As Demo.Loan.Msg.Application, callresponse As Demo.Loan.Msg.Approval, callname As %String) As %Status [ Language = cache, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=context.TheResults.Insert(callresponse)
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("Demo.Loan.FindRateDecisionProcessBPL.Thread1","OnResponse3")
 Goto Exit
}

/// Response Handler for call to Demo.Loan.BankEven
Method OnResponse4(process As Ens.BusinessProcess, context As Ens.BP.Context, request As Demo.Loan.Msg.Application, response, callrequest As Demo.Loan.Msg.Application, callresponse As Demo.Loan.Msg.Approval, callname As %String) As %Status [ Language = cache, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=context.TheResults.Insert(callresponse)
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("Demo.Loan.FindRateDecisionProcessBPL.Thread1","OnResponse4")
 Goto Exit
}

Storage Default
{
<Data name="ContextDefaultData1">
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>BankName</Value>
</Value>
<Value name="2">
<Value>InterestRate</Value>
</Value>
<Value name="3">
<Value>IsApproved</Value>
</Value>
<Value name="4">
<Value>Iterator</Value>
</Value>
<Value name="5">
<Value>TheResults</Value>
</Value>
<Value name="6">
<Value>ThisResult</Value>
</Value>
</Data>
<DefaultData>ContextDefaultData1</DefaultData>
<Type>%Library.CacheStorage</Type>
}

}

