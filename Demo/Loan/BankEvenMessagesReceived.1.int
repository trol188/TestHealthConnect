ROUTINE Demo.Loan.BankEvenMessagesReceived.1 [Type=INT, Generated]
 ;Demo.Loan.BankEvenMessagesReceived.1
 ;(C)InterSystems, generated for class Demo.Loan.BankEvenMessagesReceived.  Do NOT edit. 06/25/2018 11:32:50AM
 ;;72506950;Demo.Loan.BankEvenMessagesReceived
 ;
SQLUPPER(v,l) { quit $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) { quit $zu(28,v,6) }
STRING(v,l) { quit $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) { quit $zu(28,v,8,$g(l,32767)) }
UPPER(v) { quit $zu(28,v,5) }
MVR(v) { quit $zu(28,v,2) }
TRUNCATE(v,l) { quit $e(v,1,$g(l,3641144)) }
%SQLAcquireLock(%rowid,s=0,unlockref=0)
	new %d,gotlock,subs
	set %d(1)=%rowid,%d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2),subs(6)=$p(%d(0),"||",1) set s=$e("S",s)
	lock +^Ens.BusinessProcessD(subs(6),"received",%d(3))#s:$zu(115,4) set gotlock=$t
	set:gotlock&&unlockref unlockref=unlockref+1,unlockref(unlockref)=$lb($name(^Ens.BusinessProcessD(subs(6),"received",%d(3))),"Demo.Loan.BankEvenMessagesReceived",s_"D")
	QUIT gotlock
%SQLAcquireTableLock(s=0,SQLCODE,to="")
	set s=$e("S",s) set:to="" to=$zu(115,4) lock +^Ens.BusinessProcessD#s:to QUIT:$t 1 set SQLCODE=-110 if s="S" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler35",,"Demo_Loan"_"."_"BankEven_MessagesReceived") } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler36",,"Demo_Loan"_"."_"BankEven_MessagesReceived") } QUIT 0
	Quit
%SQLAfterTriggers()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLAfterTriggers")
%SQLBeforeTriggers()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLBeforeTriggers")
%SQLBuildIndices(pIndices="",pLockFlag=0,pStartID="",pEndID="",pIgnoreIndexList="")
	QUIT ##class(Demo.Loan.BankEven).%BuildIndices(pIndices,,pLockFlag,,pStartID,pEndID,pIgnoreIndexList)
%SQLBuildPurgeIndexForRow(pIndices="",pActions="BP",pLockRow=1,%d,%e,pIgnoreIndexList="")
	// Purge and build index nodes for a single row using given values, return Status Code
	new sn,tSC,tLock set tSC=1,pActions=$zcvt(pActions,"U")
	try {
		if $g(%d(1))="" { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'Demo_Loan.BankEven_MessagesReceived'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'Demo_Loan.BankEven_MessagesReceived'"))) RETURN tSC }
		if pLockRow { if '..%SQLAcquireLock(%d(1)) { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'Demo_Loan.BankEven_MessagesReceived' with %ID = '"_%d(1)_"'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'Demo_Loan.BankEven_MessagesReceived' with %ID = '"_%d(1)_"'"))) RETURN tSC  } else { set tLock=1 }}
		set %d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2)
		set subs(6)=$p(%d(0),"||",1)
		if pLockRow { do ..%SQLReleaseLock(%d(1),0,0) set tLock=0 }
	}
	catch {
		if $g(tLock) { do ..%SQLReleaseLock(%d(1),0,0) }
		set tSC=$select(+tSC:$$Error^%apiOBJ(5594,$ze),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5594,$ze)))
	}
	QUIT tSC
%SQLCheckUnique(pFromOrig=0,%pID,%pVals...)
	 ;---&sql(SELECT ID FROM Demo_Loan.BankEven_MessagesReceived WHERE  ID=:%pVals(1) AND (%ID <> :%pID OR :%pID IS NULL)) QUIT SQLCODE=100
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	do %0Ao QUIT SQLCODE=100
 q
%0Ao n sqldata8d,sqldata9d,sqldata10d,sqldata12d,sqldata2d,sqldata3d,sqldata4d,sqldata1d,sqldata6d,sqldata7d
 s $zt="%0Aerr"
 s sqldata8d=$zu(115,2)
 s sqldata9d=0,sqldata10d=""
 d:$zu(115,15) $system.ECP.Sync()
 s sqldata2d=$g(%pVals(1)),sqldata3d=$g(%pID),sqldata4d=$g(%pID)
 s SQLCODE=100
 ; asl MOD# 2
 s sqldata1d=sqldata2d
 s sqldata6d=$p(sqldata1d,"||"),sqldata7d=$p(sqldata1d,"||",2)
 i sqldata6d'="" s sqldata12d="" i $d(^Ens.BusinessProcessD(sqldata6d),sqldata12d)
 i '$t
 e  i $lg(sqldata12d,1)'[($e($lg(sqldata12d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata12d,1)))
 i '$t,sqldata7d'="",$d(^Ens.BusinessProcessD(sqldata6d,"received",sqldata7d))
 e  g %0AmBdun
 i '(((sqldata3d'="")&&(sqldata1d'=sqldata3d))||(sqldata4d="")) g %0AmBdun
 goto:sqldata8d'=1 %0AmBuncommitted
 if sqldata8d=1 {
 	lock +^Ens.BusinessProcessD($p(sqldata1d,"||",1),"received",$p(sqldata1d,"||",2))#"S":$zu(115,4)
 	if $t { set sqldata10d=$name(^Ens.BusinessProcessD($p(sqldata1d,"||",1),"received",$p(sqldata1d,"||",2)))_"#""SI""",sqldata9d=1 }
 	else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table Demo_Loan.BankEven_MessagesReceived for RowID value: "_sqldata1d ztrap "LOCK"  }
 }
 ; asl MOD# 3
 s sqldata6d=$p(sqldata1d,"||"),sqldata7d=$p(sqldata1d,"||",2)
 i sqldata6d'="" s sqldata12d="" i $d(^Ens.BusinessProcessD(sqldata6d),sqldata12d)
 i '$t
 e  i $lg(sqldata12d,1)'[($e($lg(sqldata12d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata12d,1)))
 i '$t,sqldata7d'="",$d(^Ens.BusinessProcessD(sqldata6d,"received",sqldata7d))
 e  g %0AmCdun
%0AmBuncommitted ;
 s SQLCODE=0 g %0Ac
%0AmCdun if $g(sqldata8d)=1 { if $g(sqldata9d)=1 { l -@sqldata10d s sqldata9d=0 } elseif $g(sqldata9d)=2 { do $classmethod($li(sqldata10d),"%UnlockId",$li(sqldata10d,2),1,1)  s sqldata9d=0 } }
%0AmBdun 
%0AmAdun 
%0Ac s %ROWCOUNT='SQLCODE
 if $g(sqldata8d)=1 { if $g(sqldata9d)=1 { l -@sqldata10d } elseif $g(sqldata9d)=2 { do $classmethod($li(sqldata10d),"%UnlockId",$li(sqldata10d,2),1,1)  } }
 q
%0Aerr s $zt=""
 d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg)
 g %0Ac
%SQLCheckUniqueIndices(pIndices,pOK)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLCheckUniqueIndices")
%SQLCheckUniqueKeys(pConNumber,pFromOrig=0,pUpdate=0,pVals...)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLCheckUniqueKeys")
%SQLCopyIcolIntoName()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLCopyIcolIntoName")
%SQLCopyNameIntoIcol()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLCopyNameToIcol")
%SQLCreateInsDelTables(pInsTrigObj,pDelTrigObj)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLCreateInsDelTables")
%SQLDefineiDjVars(%d,subs,master)
	QUIT
%SQLDelete(%rowid,%check,%tstart=1,%mv=0,%polymorphic=0)
	new bva,ce,%d,dc,%e,%ele,%itm,%key,%l,%nc,omcall,%oper,%pos,%s,sn,sqlcode,subs set %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2),subs(6)=$p(%d(0),"||",1),%l=$c(0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,2) { new %ls if $tlevel,$i(%0CacheLock("Demo.Loan.BankEvenMessagesReceived"))>$zu(156,50,1) { lock +^Ens.BusinessProcessD:$zu(115,4) lock:$t -^Ens.BusinessProcessD set %ls=$s($t:2,1:0) } else { lock +^Ens.BusinessProcessD(subs(6),"received",%d(3)):$zu(115,4) set %ls=$t } set:%ls=2 $e(%check,2)=$c(1) set:%ls=1 $e(%l)=$c(1) if '%ls { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler40",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$g(%d(1))) QUIT  }} if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORDelete"
	if '$a(%check),'$zu(115,7) do  if sqlcode set SQLCODE=sqlcode do ..%SQLEExit() QUIT  
	. new %fk,%k,%p,%st,%t,%z set %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(0),%d(3),,"
	. for  quit:sqlcode<0  set %k=$o(^oddEXTR("Demo.Loan.BankEvenMessagesReceived","n",%k)) quit:%k=""  set %t="" for  set %t=$o(^oddEXTR("Demo.Loan.BankEvenMessagesReceived","n",%k,"f",%t)) quit:%t=""  set %st=(%t="Demo.Loan.BankEvenMessagesReceived") set %fk="" for  set %fk=$order(^oddEXTR("Demo.Loan.BankEvenMessagesReceived","n",%k,"f",%t,%fk)) quit:%fk=""  x "set %z=$classmethod(%t,%fk_""SQLFKeyRefAction"",%st,%k,$a(%check,2),"_%p(%k)_")" if %z set sqlcode=-124 quit  
	set ce="" for  { set ce=$order(^oddSQL("Demo_Loan","BankEven_MessagesReceived","DC",ce)) quit:ce=""   do $classmethod(ce,"%SQLDeleteChildren",%d(1),%check,.sqlcode) quit:sqlcode<0  } if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() QUIT } // Delete any children
	if '$a(%check,3) {
	}
	k ^Ens.BusinessProcessD(subs(6),"received",%d(3))
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORDelete	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT
	Quit
%SQLDeleteChildren(%parent,%check,sqlcode)
	// Delete all rows where BankEven = :%parent
	new %ROWCOUNT,%ROWID,SQLCODE
	set:$a(%check,2)=2 $e(%check,2)=$c(0)
	 ;---&sql(DELETE %USECHECKVARIABLE FROM Demo_Loan.BankEven_MessagesReceived WHERE BankEven = :%parent)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	do %0Co
	set:SQLCODE<0 sqlcode=SQLCODE QUIT  
 q
%0Co n sqldata6d,sqldata7d,sqldata8d,sqldata9d,sqldata10d,sqldata11d,sqldata13d,sqldata18d,sqldata24d,sqldata2d,sqldata3d,sqldata1d,sqldata4d,sqldata5d
 s $zt="%0Cerr"
 n %sqltime s %sqltime=$zh
 s sqldata6d=0 s:$d(%0CacheRowLimit)#2 sqldata7d=%0CacheRowLimit
 s sqldata8d=$zu(115,2)
 s sqldata9d=""
 s sqldata2d=$g(%parent),sqldata2d=$s(sqldata2d="":"",$isvalidnum(sqldata2d):+sqldata2d,1:sqldata2d)
 s SQLCODE=100
 If $zu(115,1)=2,'$TLEVEL { s sqldata10d=1 TSTART } If $zu(115,1) { s sqldata11d=1 TSTART  }
 ; asl MOD# 2
 s sqldata1d=sqldata2d
 i sqldata1d'="" s sqldata13d="" i $d(^Ens.BusinessProcessD(sqldata1d),sqldata13d)
 i '$t
 e  i $lg(sqldata13d,1)'[($e($lg(sqldata13d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata13d,1)))
 i  g %0CmBdun
 s sqldata4d=""
%0CmBk1 s sqldata4d=$o(^Ens.BusinessProcessD(sqldata1d,"received",sqldata4d))
 i sqldata4d="" g %0CmBdun
 s sqldata3d=(sqldata1d)_"||"_(sqldata4d)
 if '$a($g(%check),2) { set sqldata18d=##class(Demo.Loan.BankEvenMessagesReceived).%SQLGetLock(sqldata3d) i 'sqldata18d { s SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler40",,"DELETE","Demo_Loan"_"."_"BankEven_MessagesReceived",sqldata3d) g %0Cc } s:sqldata18d=2&&($g(%check)'="") $e(%check,2)=$c(1) } else { s sqldata18d=0 }
 ; asl MOD# 3
 s sqldata5d=$p(sqldata3d,"||"),sqldata4d=$p(sqldata3d,"||",2)
 i sqldata5d'="" s sqldata13d="" i $d(^Ens.BusinessProcessD(sqldata5d),sqldata13d)
 i '$t
 e  i $lg(sqldata13d,1)'[($e($lg(sqldata13d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata13d,1)))
 i '$t,sqldata4d'="",$d(^Ens.BusinessProcessD(sqldata5d,"received",sqldata4d))
 e  g %0CmCdun
 s sqldata1d=$p(sqldata3d,"||")
 do ##class(Demo.Loan.BankEvenMessagesReceived).%SQLDelete(sqldata3d,$g(%check),'$g(sqldata11d))
 i 'SQLCODE i $i(sqldata6d)'<$g(sqldata7d,9223372036854775807) d:sqldata18d=1 ##class(Demo.Loan.BankEvenMessagesReceived).%SQLReleaseLock(sqldata3d) g %0Cc
%0CmCdun d:sqldata18d=1 ##class(Demo.Loan.BankEvenMessagesReceived).%SQLReleaseLock(sqldata3d) g:SQLCODE<0 %0Cc
 g %0CmBk1
%0CmBdun 
%0CmAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(sqldata6d),1:0)
 If $zu(115,1),$g(sqldata11d) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(sqldata10d))&&($zu(115,1)=2) 
 s:$d(%sqltime) sqldata24d=$g(sqldata24d)+$zh-%sqltime
 n context,tmp,count,total,mean s context=$system.Context.SQL()
 if $d(sqldata24d,%sqltime) {
 if $g(context.Stats)<$zu(99) { d AggregateStats^%SYS.SQLSRV() }
 s tmp=$g(context.Stats($namespace,"UAMoKychBQxE/ouZKzuvxbvHwW0="))
 s count=$lg(tmp,1),total=$lg(tmp,2),mean=total+%sqltime/(count+1)
 s context.Stats($namespace,"UAMoKychBQxE/ouZKzuvxbvHwW0=")=$lb(count+1,total+%sqltime,$s(+count=0:0,1:(%sqltime-mean)**2+(count*((total/count-mean)**2+$lg(tmp,3)))/(count+1))) }
 q
%0Cerr s $zt=""
 d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg)
 d:$g(sqldata18d)=1 ##class(Demo.Loan.BankEvenMessagesReceived).%SQLReleaseLock(sqldata3d)
 g %0Cc
%SQLDeleteTempStreams()
	// Delete all temporary streams
	QUIT
%SQLEExit()
	do:%oper'="DELETE" ..%SQLUnlock2(),..%SQLUnlock() 
	do ..%SQLUnlockRef()
	if %tstart,$zu(115,1)=1,$TLEVEL { set %tstart=0 TROLLBACK 1 } kill:$g(omcall) %0CacheSQLRA QUIT  
	Quit
%SQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key %1.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=%pVal(1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"Demo_Loan"_"."_"BankEven_MessagesReceived"_":"_"%1") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv='..%SQLCheckUnique(0,,%pVal(1)) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Quit
%SQLFKeyDelLock()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLFKeyDelLock")
%SQLFieldValidate()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLFieldValidate")
%SQLGetLock(pRowId,pShared=0,pUnlockRef)
	if $tlevel,$i(%0CacheLock("Demo.Loan.BankEvenMessagesReceived"))>$zu(156,50,1) { new s set s=$e("S",pShared) lock +^Ens.BusinessProcessD#s:$zu(115,4) lock:$t -^Ens.BusinessProcessD#s QUIT $s($t:2,1:0) } 
	QUIT ..%SQLAcquireLock(pRowId,pShared,.pUnlockRef)
%SQLGetOld(%rowid,%d,%e,sqlcode)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLGetOld")
%SQLGetOldAll()
	new s set %d(1)=%rowid,%d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2),subs(6)=$p(%d(0),"||",1) if '$d(^Ens.BusinessProcessD(subs(6),"received",%d(3)),s) { set sqlcode=100 quit  }
	set %e(2)=s
	QUIT
%SQLGetOldIndex(%rowid,%d,pF=0,sqlcode)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLGetOldIndex")
%SQLInsert(%d,%check,%inssel,%vco,%tstart=1,%mv=0)
	new bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,sqlcode,sn,subs,unlockref set %oper="INSERT",sqlcode=0,%l=$c(0,0,0),unlockref=1
	if $a(%check,7) { new %diu merge %diu=%d }
	set:$d(%d(0)) subs(6)=$p(%d(0),"||",1)
	if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode QUIT "" }
	do ..%SQLNormalizeFields()
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORInsert"
	if '$a(%check),$g(%d(0))'="",'##class(Demo.Loan.BankEven).%SQLExists($s($a(%check,2)=1:-1,1:0),.unlockref,%d(0)) {
		if sqlcode<0 { set SQLCODE=sqlcode if SQLCODE=-114 { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler56",,%oper,"Demo_Loan"_"."_"BankEven",$g(%d(0))) } } else { set SQLCODE=-104,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler9",,"Demo_Loan"_"."_"BankEven_MessagesReceived") }
		do ..%SQLEExit() QUIT ""
	}
	if '$a(%check) if $g(%d(0))="" { do ..%SQLMissing("BankEven") set SQLCODE=sqlcode do ..%SQLEExit() QUIT "" }
	set:'$d(%d(3)) %d(3)=$i(^Ens.BusinessProcessD(subs(6),"received")) set %d(1)=%d(0)_"||"_%d(3),subs(6)=$p(%d(0),"||",1)
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
				// Constraint IDKEY
			if '$a(%check,2) { lock +^Ens.BusinessProcessD("IDKEY",%d(0),%d(3)):$zu(115,4) if $t { set $e(%l,2)=$c(1) } else { do ..%SQLUnlockError("IDKEY") quit  } }
			if '..IDKEYSQLCheckUnique(0,,%d(0),%d(3)) {
				if $a(%check,7) { new tID set tID=..IDKEYSQLFindRowIDByConstraint($lb(%d(0),%d(3)),1) if tID'="" { kill %d merge %d=%diu kill %diu do ..%SQLUpdate(tID,%check,.%d),..%SQLUnlock2(),..%SQLUnlockRef() set $e(%check,7)=$c(2) quit  }}
				set sqlcode=-119,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler10",,"Demo_Loan"_"."_"BankEven_MessagesReceived","IDKEY","BankEven"_"="_$$quoter^%apiSQL($g(%d(0)))_","_"element_key"_"="_$$quoter^%apiSQL($g(%d(3)))) quit
			}
		} while 0
		QUIT:$a(%check,7)=2 $s('SQLCODE:tID,1:"")				// INSERT became UPDATE
		if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() QUIT "" }		// A constraint failed
	}
	if '$a(%check,2) { new %ls if $tlevel,$i(%0CacheLock("Demo.Loan.BankEvenMessagesReceived"))>$zu(156,50,1) { lock +^Ens.BusinessProcessD:$zu(115,4) lock:$t -^Ens.BusinessProcessD set %ls=$s($t:2,1:0) } else { lock +^Ens.BusinessProcessD(subs(6),"received",%d(3)):$zu(115,4) set %ls=$t } set:%ls=2 $e(%check,2)=$c(1) set:%ls=1 $e(%l)=$c(1) if '%ls set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler40",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$g(%d(1))) do ..%SQLEExit() QUIT ""  }
	set ^Ens.BusinessProcessD(subs(6),"received",%d(3))=$g(%d(2))
	lock:$a(%l,2) -^Ens.BusinessProcessD("IDKEY",%d(0),%d(3))#"D" 
	lock:$a(%l) -^Ens.BusinessProcessD(subs(6),"received",%d(3))
	TCOMMIT:%tstart&&($zu(115,1)=1)
	do ..%SQLUnlockRef()
	set SQLCODE=0
	QUIT %d(1) 			// %SQLInsert
ERRORInsert	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$ze)
	if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  }
	do ..%SQLEExit()
	QUIT ""
%SQLInsertComputes(view=0)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLInsertComputes")
%SQLInsertStreams(pVal,pClassname,pProperty,pField,pChangeEmptyToNull,pOIDType,sqlcode,%msg) public {
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLInsertStreams") }
%SQLInvalid(pIcol,pVal) public {
	set:$l($g(pVal))>40 pVal=$e(pVal,1,40)_"..." do:'$d(%n) ..%SQLnBuild() set %msg=$s($g(%msg)'="":%msg_$c(13,10),1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler37",,"Demo_Loan"_"."_"BankEven_MessagesReceived"_"."_$lg(%n,pIcol),$s($g(pVal)'="":$s(pVal="":"<NULL>",pVal=$c(0):"<EMPTY STRING>",1:"'"_pVal_"'"),1:"")),sqlcode=$s(%oper="INSERT":-104,1:-105)
	QUIT sqlcode }
%SQLInvalid2(ficol,val,char) [ sqlcode ] public {
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLInvalid2") }
%SQLMVDelete(oref,flags,%rowid,oldrec)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVDelete")
%SQLMVIndexDelete(%e)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVIndexDelete")
%SQLMVIndexInsert(%d)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVIndexInsert")
%SQLMVIndexUpdate(%d,%e)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVIndexUpdate")
%SQLMVInsert(oref,flags,%rowid,newrec)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVInsert")
%SQLMVUpdate(oref,flags,%rowid,newrec,oldrec)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLMVUpdate")
%SQLMissing(fname)
	set sqlcode=-108,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler47",,fname,"Demo_Loan"_"."_"BankEven_MessagesReceived") quit
%SQLNormalizeCompFields()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLNormalizeCompFields")
%SQLNormalizeFields()
	set:$g(%d(0))'="" %d(0)=$select(%d(0)=$c(0)&&$zu(115,13):"",1:%d(0)\1)
	QUIT
%SQLPurgeIndices(pIndices="",pLockExtent=0,pIgnoreIndexList="")
	QUIT ##class(Demo.Loan.BankEven).%PurgeIndices(pIndices,pLockExtent,pIgnoreIndexList)
%SQLQuickBulkInsert(%nolock=0)
	// Insert multiple new rows with values %qd(icol)
	new c,call,nc,nr,%qd,r,x set:%nolock=2 %nolock=0
	set nr=$zobjexport(12) for r=1:1:nr { set nc=$zobjexport(12) kill %qd for c=1:1:nc { set:$zobjexport(17) %qd(c+1)=$zobjexport(12) } do ..%SQLQuickInsert(.%qd,%nolock) set x=$zobjexport($s(%qrc:-1,1:%ROWID),18) } QUIT
%SQLQuickBulkLoad(%rowidlist,%nolock=0,pkey=0)
	// QuickLoad multiple rows
	new i,rc set:%nolock=2 %nolock=0 set rc=0
	for i=2:1:$lg(%rowidlist)+1 { do ..%SQLQuickLoad($lg(%rowidlist,i),%nolock) if SQLCODE=0 { set rc=rc+1 } else { QUIT  } } set %ROWCOUNT=rc QUIT
	Quit
%SQLQuickBulkSave(%nolock=0)
	// Insert and/or Update multiple [new] rows with values %qd(icol)
	set x=$zobjexport(-1,18),%qrc=400,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler44",,"Demo_Loan"_"."_"BankEven_MessagesReceived") QUIT
%SQLQuickBulkUpdate(%nolock=0)
	// Update multiple new rows with values %qd(icol)
	new c,call,nc,nr,%qd,r,x set:%nolock=2 %nolock=0 set nr=$zobjexport(12) for r=1:1:nr { set %rowid=$zobjexport(12),nc=$zobjexport(12) kill %qd for c=1:1:nc { set:$zobjexport(17) %qd(c+1)=$zobjexport(12) } do ..%SQLQuickUpdate(%rowid,.%qd,%nolock) set x=$zobjexport($s(%qrc:-1,1:%ROWID),18) quit:%qrc  } QUIT  
%SQLQuickDelete(%rowid,%nolock=0,pkey=0)
	// Delete row where SQLRowID=%rowid
	set:%nolock=2 %nolock=0
	if '..%SQLExists(,,%rowid) { set %qrc=0,%ROWCOUNT=0 QUIT  }
	do ..%SQLDelete(%rowid,$c(0,%nolock=1,0,0,0,0))
	if SQLCODE<0 { set %qrc=-SQLCODE,%ROWCOUNT=0 } else { set %ROWCOUNT=1,%qrc=SQLCODE } QUIT
	Quit
%SQLQuickDeleteChildren(%parent,%nolock=0,pkey=0)
	// Delete all rows where BankEven = :%parent
	set:%nolock=2 %nolock=0 new %check set %check=$c(%nolock=1,0,0,0,0,0),SQLCODE=0 do ..%SQLDeleteChildren(%parent,%check,.SQLCODE)
	if SQLCODE<0 { set %qrc=-SQLCODE,%ROWCOUNT=0 } else { set %qrc=0 } QUIT
	Quit
%SQLQuickFindPKeyByRowID(%rowid)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLQuickFindPKeyByRowID")
%SQLQuickFindRowIDByPKey(pPKey,pOutput=1,pInternal=0)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLQuickFindRowIDByPKey")
%SQLQuickInsert(d,%nolock=0,pkey=0,parentpkey=0)
	// Insert new row with values d(icol)
	set:%nolock=2 %nolock=0
	do ..%SQLQuickOdbcToLogical(.d)
	set %ROWID=..%SQLInsert(.d,$c(0,%nolock=1,0,0,0,0)),%ROWCOUNT='SQLCODE,%qrc=SQLCODE kill d QUIT
%SQLQuickLoad(%rowid,%nolock=0,pkey=0,qq=0)
	// Get fields from row where SQLRowID=%rowid
	new d,i,il,subs set:%nolock=2 %nolock=1
	if %nolock=0 { if '..%SQLAcquireLock(%rowid) { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler45",,"Demo_Loan"_"."_"BankEven_MessagesReceived",%rowid),%ROWCOUNT=0 QUIT  } set:$zu(115,2) il=$zu(115,2,0) }
	set d(1)=%rowid,d(0)=$p(d(1),"||",1),d(3)=$p(d(1),"||",2),subs(6)=$p(d(0),"||",1)
	new s,ul set ul=0,d(1)=%rowid if $zu(115,2)=1 { lock +^Ens.BusinessProcessD(subs(6),"received",d(3))#"S":$zu(115,4) if $t { set ul=1 } else { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler46",,"Demo_Loan"_"."_"BankEven_MessagesReceived",%rowid),%ROWCOUNT=0 quit  } }
	if '$d(^Ens.BusinessProcessD(subs(6),"received",d(3)),s) { set SQLCODE=100,%qrc=100 if %nolock=0 { do:$g(il) $zu(115,2,il) }} else { set SQLCODE=0
	if %nolock=0 { if $zu(115,1)=1 { TSTART  } elseif '$TLEVEL,$zu(115,1)=2 { TSTART  }} set d(2)=s  }
	do ..%SQLQuickLogicalToOdbc(.d)
	if SQLCODE set %ROWCOUNT=0 set:SQLCODE<0 SQLCODE=-SQLCODE lock:ul -^Ens.BusinessProcessD(subs(6),"received",d(3))#"SI" set %qrc=SQLCODE QUIT
	set:qq d=$zobjexport("Demo.Loan.BankEvenMessagesReceived",18),d=$zobjexport(4,18) set i=-1 for  { set i=$o(d(i)) quit:i=""  set d=$zobjexport(d(i),18) } set %qrc=0,%ROWCOUNT=1 lock:ul -^Ens.BusinessProcessD(subs(6),"received",d(3))#"SI" if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,0) do:$g(il) $zu(115,2,il) } QUIT
	Quit
%SQLQuickLoadChildren(%parref,%nolock=0,pkey=0,returnpkey=0)
	// Get non-hidden fields from table where ParentReferenceField=%parref
	new d,i,il,row set:%nolock=2 %nolock=0 if %nolock=0 { set:$zu(115,2) il=$zu(115,2,0) }
	 ;---&sql(DECLARE qckchld CURSOR FOR SELECT ID,MessagesReceived INTO :d(1),:d(2) FROM Demo_Loan.BankEven_MessagesReceived WHERE BankEven = :%parref)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE, d
	
	 ;---set %ROWCOUNT=0,%qrc=0 &sql(OPEN qckchld) if SQLCODE set %qrc=-SQLCODE do:$g(il) $zu(115,2,il) QUIT
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	set %ROWCOUNT=0,%qrc=0 do %qckchld0o if SQLCODE set %qrc=-SQLCODE do:$g(il) $zu(115,2,il) QUIT
	 ;---for  { &sql(FETCH qckchld)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	for  { do %0Ho
	if SQLCODE set:SQLCODE<0 %qrc=-SQLCODE set:'%ROWCOUNT&&(SQLCODE=100) %qrc=100 do:$g(il) $zu(115,2,il) QUIT
	set row="",i=-1 for  { set i=$o(d(i)) quit:i=""  set row=row_$lb(d(i)) } set %qrc=0,d=$zobjexport(row,18) }
	 ;---&sql(CLOSE qckchld) set:SQLCODE %qrc=-SQLCODE do:$g(il) $zu(115,2,il) QUIT
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	do %qckchld0c set:SQLCODE %qrc=-SQLCODE do:$g(il) $zu(115,2,il) QUIT
 q
%qckchld0o 
 try { s SQLCODE=$s($g(%qckchld088c):-101,1:0) q:SQLCODE'=0 
 n %sqltime s %sqltime=$zh
 s %qckchld088d(1)=0 s:$d(%0CacheRowLimit)#2 %qckchld088d(2)=%0CacheRowLimit
 s %qckchld088d(3)=$zu(115,2)
 s %qckchld088d(4)=0,%qckchld088d(5)=""
 d:$zu(115,15) $system.ECP.Sync()
 s %qckchld088d(6)=$g(%parref),%qckchld088d(6)=$s(%qckchld088d(6)="":"",$isvalidnum(%qckchld088d(6)):+%qckchld088d(6),1:%qckchld088d(6))
 s %qckchld088c=1,SQLCODE=0
 s:$d(%sqltime) %qckchld088d(7)=$g(%qckchld088d(7))+$zh-%sqltime
 } catch { d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %qckchld088c,%qckchld088d,%qckchld088E,%qckchld088n,%qckchld088R }
 q
%0Efirst 
 ; asl MOD# 2
 s %qckchld088d(8)=%qckchld088d(6)
 i %qckchld088d(8)'="" s %qckchld088d(9)="" i $d(^Ens.BusinessProcessD(%qckchld088d(8)),%qckchld088d(9))
 i '$t
 e  i $lg(%qckchld088d(9),1)'[($e($lg(%qckchld088d(9),1))_"Demo.Loan.BankEven"_$e($lg(%qckchld088d(9),1)))
 i  g %0EmBdun
 s %qckchld088d(10)=""
%0EmBk1 s %qckchld088d(11)="" s %qckchld088d(10)=$o(^Ens.BusinessProcessD(%qckchld088d(8),"received",%qckchld088d(10)),1,%qckchld088d(11))
 i %qckchld088d(10)="" g %0EmBdun
 s d(2)=%qckchld088d(11)
 s d(1)=(%qckchld088d(8))_"||"_(%qckchld088d(10))
 goto:%qckchld088d(3)'=1 %0EmBuncommitted
 if %qckchld088d(3)=1 {
 	lock +^Ens.BusinessProcessD($p(d(1),"||",1),"received",$p(d(1),"||",2))#"S":$zu(115,4)
 	if $t { set %qckchld088d(5)=$name(^Ens.BusinessProcessD($p(d(1),"||",1),"received",$p(d(1),"||",2)))_"#""SI""",%qckchld088d(4)=1 }
 	else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table Demo_Loan.BankEven_MessagesReceived for RowID value: "_d(1) ztrap "LOCK"  }
 }
 ; asl MOD# 3
 s %qckchld088d(12)=$p(d(1),"||"),%qckchld088d(10)=$p(d(1),"||",2)
 i %qckchld088d(12)'="" s %qckchld088d(9)="" i $d(^Ens.BusinessProcessD(%qckchld088d(12)),%qckchld088d(9))
 i '$t
 e  i $lg(%qckchld088d(9),1)'[($e($lg(%qckchld088d(9),1))_"Demo.Loan.BankEven"_$e($lg(%qckchld088d(9),1)))
 i '$t,%qckchld088d(10)'="" s %qckchld088d(13)="" i $d(^Ens.BusinessProcessD(%qckchld088d(12),"received",%qckchld088d(10)),%qckchld088d(13))
 e  g %0EmCdun
 s d(2)=%qckchld088d(13)
 s %qckchld088d(8)=$p(d(1),"||")
%0EmBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %ROWCOUNT=$i(%qckchld088d(1)),%ROWID=d(1),%qckchld088c=10
 //-- FETCH Output
 s:$d(%sqltime) %qckchld088d(7)=$g(%qckchld088d(7))+$zh-%sqltime
 quit
%qckchld0f //-- FETCH tag
 i '$g(%qckchld088c) { s SQLCODE=-102 q  } i %qckchld088c=100 { s SQLCODE=100 q  } s SQLCODE=0
 i $d(%qckchld088d(2))#2,$g(%qckchld088d(1))'<%qckchld088d(2) { s SQLCODE=100,%ROWCOUNT=%qckchld088d(1),%qckchld088c=100 q }
 n %sqltime s %sqltime=$zh
 g %0Efirst:%qckchld088c=1
%0EmCdun if $g(%qckchld088d(3))=1 { if $g(%qckchld088d(4))=1 { l -@%qckchld088d(5) s %qckchld088d(4)=0 } elseif $g(%qckchld088d(4))=2 { do $classmethod($li(%qckchld088d(5)),"%UnlockId",$li(%qckchld088d(5),2),1,1)  s %qckchld088d(4)=0 } }
 g %0EmBk1
%0EmBdun 
%0EmAdun 
 s %ROWCOUNT=%qckchld088d(1),SQLCODE=100,%qckchld088c=100
 s:$d(%sqltime) %qckchld088d(7)=$g(%qckchld088d(7))+$zh-%sqltime
 //-- no [more] data
 quit
%qckchld0c i '$g(%qckchld088c) { s SQLCODE=-102 q  }
 n %sqltime s %sqltime=$zh
 s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%qckchld088d(1)),1:0)
 if $g(%qckchld088d(3))=1 { if $g(%qckchld088d(4))=1 { l -@%qckchld088d(5) } elseif $g(%qckchld088d(4))=2 { do $classmethod($li(%qckchld088d(5)),"%UnlockId",$li(%qckchld088d(5),2),1,1)  } }
 s:$d(%sqltime) %qckchld088d(7)=$g(%qckchld088d(7))+$zh-%sqltime
 n context,tmp,count,total,mean s context=$system.Context.SQL()
 if $d(%qckchld088d(7),%sqltime) {
 if $g(context.Stats)<$zu(99) { d AggregateStats^%SYS.SQLSRV() }
 s tmp=$g(context.Stats($namespace,"ru6Ww4ZlKZDuJWH+g+4hyW+LoPo="))
 s count=$lg(tmp,1),total=$lg(tmp,2),mean=total+%sqltime/(count+1)
 s context.Stats($namespace,"ru6Ww4ZlKZDuJWH+g+4hyW+LoPo=")=$lb(count+1,total+%sqltime,$s(+count=0:0,1:(%sqltime-mean)**2+(count*((total/count-mean)**2+$lg(tmp,3)))/(count+1))) }
 k %qckchld088c,%qckchld088d,%qckchld088E,%qckchld088n,%qckchld088R
 s SQLCODE=0
 quit  // close
%0Eerr d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg)
 s %qckchld088c=100
 quit  // error
%0Ho try { do %qckchld0f q:SQLCODE'=0
 } catch { do %0Eerr }
 q
%SQLQuickLogicalToOdbc(%d)
	QUIT
%SQLQuickOdbcToLogical(%d)
	QUIT
%SQLQuickUpdate(%rowid,d,%nolock=0,pkey=0)
	// Update row with SQLRowID=%rowid with values d(icol)
	if '..%SQLExists(,,%rowid) { set %qrc=0,%ROWCOUNT=0 QUIT  }
	set:%nolock=2 %nolock=0
	do ..%SQLQuickOdbcToLogical(.d)
	do ..%SQLUpdate(%rowid,$c(0,%nolock=1,0,0,0,0),.d) set %ROWCOUNT='SQLCODE set:SQLCODE=100 SQLCODE=0 set %qrc=SQLCODE kill d QUIT
%SQLReleaseLock(%rowid,s=0,i=0,e="")
	new %d,subs
	set %d(1)=%rowid,%d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2),subs(6)=$p(%d(0),"||",1) set s=$e("S",s)_$e("D",i)
	lock -^Ens.BusinessProcessD(subs(6),"received",%d(3))#s
	set:i&&($g(%0CacheLock("Demo.Loan.BankEvenMessagesReceived"))) %0CacheLock("Demo.Loan.BankEvenMessagesReceived")=%0CacheLock("Demo.Loan.BankEvenMessagesReceived")-1
	QUIT
%SQLReleaseTableLock(s=0,i=0)
	set s=$e("S",s)_$e("D",i) lock -^Ens.BusinessProcessD#s QUIT 1
	Quit
%SQLStorageValidation()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLStorageValidation")
%SQLTrigDelTab()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLTrigDelTab")
%SQLTrigInsTab()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLTrigInsTab")
%SQLUnlock()
	lock:$a(%l) -^Ens.BusinessProcessD(subs(6),"received",%d(3))
	QUIT
%SQLUnlock2()
	lock:$a(%l,2) -^Ens.BusinessProcessD("IDKEY",%d(0),%d(3))#"D" QUIT
%SQLUnlockError(cname)
	set sqlcode=-110 if %oper="DELETE" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler48",,"Demo_Loan"_"."_"BankEven_MessagesReceived",cname) } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler49",,"Demo_Loan"_"."_"BankEven_MessagesReceived",cname) } quit
	Quit
%SQLUnlockRef()
	for %itm=2:1:$g(unlockref) {
		if $lg(unlockref(%itm))'="%UnlockId" { lock -@$lg(unlockref(%itm))#$lg(unlockref(%itm),3) }
		else { do $classmethod($lg(unlockref(%itm),2),$lg(unlockref(%itm)),$lg(unlockref(%itm),3),1,1) }
		set:$g(%0CacheLock($lg(unlockref(%itm),2))) %0CacheLock($lg(unlockref(%itm),2))=%0CacheLock($lg(unlockref(%itm),2))-1
	}
	QUIT
%SQLUpdate(%rowid,%check,%d,%vco,%tstart=1,%mv=0,%polymorphic=0,%soid)
	new %e,bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,icol,omcall,s,sn,sqlcode,subs,t set %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode QUIT  }
	do ..%SQLNormalizeFields()
	if ($d(%d(1))&&($g(%d(1))'=%rowid))||($d(%d(0))&&($g(%d(0))'=$p(%rowid,"||",1)))||($d(%d(3))&&($g(%d(3))'=$p(%rowid,"||",2))) { set SQLCODE=-107,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler17",,"'ID', 'BankEven', or 'element_key'","Demo_Loan"_"."_"BankEven_MessagesReceived") QUIT  }
	for icol=2:1:3 { set $e(%e,icol)=$c($d(%d(icol))) }
	set %d(1)=%rowid,%e(1)=%rowid,%d(0)=$p(%d(1),"||",1),%d(3)=$p(%d(1),"||",2),subs(6)=$p(%d(0),"||",1)
	if '$a(%check,2) { new %ls if $tlevel,$i(%0CacheLock("Demo.Loan.BankEvenMessagesReceived"))>$zu(156,50,1) { lock +^Ens.BusinessProcessD:$zu(115,4) lock:$t -^Ens.BusinessProcessD set %ls=$s($t:2,1:0) } else { lock +^Ens.BusinessProcessD(subs(6),"received",%d(3)):$zu(115,4) set %ls=$t } set:%ls=2 $e(%check,2)=$c(1) set:%ls=1 $e(%l)=$c(1) if '%ls { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler40",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$g(%d(1))) QUIT  }} if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORUpdate"
	if $g(%vco)'="" { do ..%SQLGetOldAll() if sqlcode { set SQLCODE=-109 do ..%SQLEExit() QUIT  } set:'$d(%d(2)) %d(2)=%e(2) set:%d(2)=%e(2) $e(%e,2)=$c(0)}
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
		} while 0
		if sqlcode { set SQLCODE=sqlcode do ..%SQLEExit() QUIT  }
	}
	set:$a(%e,2) ^Ens.BusinessProcessD(subs(6),"received",%d(3))=$g(%d(2))
	do ..%SQLUnlock2()
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORUpdate	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"Demo_Loan"_"."_"BankEven_MessagesReceived") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT  
	Quit
%SQLUpdateComputes(view=0)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLUpdateComputes")
%SQLUpdateStreams(pNew,pOld,pClassname,pProperty,pField,pChangeEmptyToNull,pOIDType,sqlcode,%msg,pAllowOid=0) public {
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLUpdateStreams") }
%SQLValidateCompFields(sqlcode)
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLValidateCompFields")
%SQLValidateFields(sqlcode)
	if $g(%d(3))'="",'(($l(%d(3))'>50)) { set sqlcode=..%SQLInvalid(3+1,%d(3)) } 
	QUIT 'sqlcode
%SQLicompView()
	QUIT $$Error^%apiOBJ(5758,"%Storage::%SQLicompView")
%SQLnBuild() public {
	set %n=$lb("ID","ID","MessagesReceived","element_key")
	QUIT }
%ValidateIndices(idxList="",autoCorrect=0,lockOption=1,multiProcess=1)
	w !,"There are no indices to validate for class 'Demo.Loan.BankEvenMessagesReceived'"
	QUIT 1
zIDKEYSQLCheckUnique(pFromOrig=0,%pID,%pVals...)
	 ;---&sql(SELECT BankEven,element_key FROM Demo_Loan.BankEven_MessagesReceived WHERE  BankEven=:%pVals(1) AND element_key=:%pVals(2) AND (%ID <> :%pID OR :%pID IS NULL)) QUIT SQLCODE=100
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	do %0Jo QUIT SQLCODE=100
 q
%0Jo n sqldata10d,sqldata11d,sqldata12d,sqldata14d,sqldata3d,sqldata4d,sqldata6d,sqldata7d,sqldata1d,sqldata2d,sqldata5d,sqldata9d
 s $zt="%0Jerr"
 s sqldata10d=$zu(115,2)
 s sqldata11d=0,sqldata12d=""
 d:$zu(115,15) $system.ECP.Sync()
 s sqldata3d=$g(%pVals(1)),sqldata3d=$s(sqldata3d="":"",$isvalidnum(sqldata3d):+sqldata3d,1:sqldata3d),sqldata4d=$g(%pVals(2)),sqldata6d=$g(%pID),sqldata7d=$g(%pID)
 s SQLCODE=100
 ; asl MOD# 2
 s sqldata1d=sqldata3d
 s sqldata2d=sqldata4d
 i sqldata1d'="" s sqldata14d="" i $d(^Ens.BusinessProcessD(sqldata1d),sqldata14d)
 i '$t
 e  i $lg(sqldata14d,1)'[($e($lg(sqldata14d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata14d,1)))
 i  g %0JmBdun
 i sqldata2d="" g %0JmBdun
 i '$d(^Ens.BusinessProcessD(sqldata1d,"received",sqldata2d)) g %0JmBdun
 s sqldata5d=(sqldata1d)_"||"_(sqldata2d)
 i '(((sqldata6d'="")&&(sqldata5d'=sqldata6d))||(sqldata7d="")) g %0JmBdun
 goto:sqldata10d'=1 %0JmBuncommitted
 if sqldata10d=1 {
 	lock +^Ens.BusinessProcessD($p(sqldata5d,"||",1),"received",$p(sqldata5d,"||",2))#"S":$zu(115,4)
 	if $t { set sqldata12d=$name(^Ens.BusinessProcessD($p(sqldata5d,"||",1),"received",$p(sqldata5d,"||",2)))_"#""SI""",sqldata11d=1 }
 	else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table Demo_Loan.BankEven_MessagesReceived for RowID value: "_sqldata5d ztrap "LOCK"  }
 }
 ; asl MOD# 3
 s sqldata9d=$p(sqldata5d,"||"),sqldata2d=$p(sqldata5d,"||",2)
 i sqldata9d'="" s sqldata14d="" i $d(^Ens.BusinessProcessD(sqldata9d),sqldata14d)
 i '$t
 e  i $lg(sqldata14d,1)'[($e($lg(sqldata14d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata14d,1)))
 i '$t,sqldata2d'="",$d(^Ens.BusinessProcessD(sqldata9d,"received",sqldata2d))
 e  g %0JmCdun
 s sqldata1d=$p(sqldata5d,"||")
%0JmBuncommitted ;
 s SQLCODE=0 g %0Jc
%0JmCdun if $g(sqldata10d)=1 { if $g(sqldata11d)=1 { l -@sqldata12d s sqldata11d=0 } elseif $g(sqldata11d)=2 { do $classmethod($li(sqldata12d),"%UnlockId",$li(sqldata12d,2),1,1)  s sqldata11d=0 } }
%0JmBdun 
%0JmAdun 
%0Jc s %ROWCOUNT='SQLCODE
 if $g(sqldata10d)=1 { if $g(sqldata11d)=1 { l -@sqldata12d } elseif $g(sqldata11d)=2 { do $classmethod($li(sqldata12d),"%UnlockId",$li(sqldata12d,2),1,1)  } }
 q
%0Jerr s $zt=""
 d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg)
 g %0Jc
zIDKEYSQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key IDKEY.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=..IDKEYSQLFindRowIDByConstraint($lb(%pVal(1),%pVal(2)),1) QUIT:SQLCODE $s('pLockOnly:0,1:1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"Demo_Loan"_"."_"BankEven_MessagesReceived"_":"_"IDKEY") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv='..IDKEYSQLCheckUnique(0,,%pVal(1),%pVal(2)) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Quit
zIDKEYSQLFindRowIDByConstraint(%con,pInternal=0)
	// Get ROWID value for UNIQUE Key IDKEY value given in %con
	new %d,id,rtm set rtm=$zu(115,5,$s(pInternal:0,1:1)) set %d(0)=$lg(%con,1) set %d(3)=$lg(%con,2)
	 ;---set %ROWCOUNT=0 set:'pInternal %qrc=0 &sql(SELECT %ID INTO :id FROM Demo_Loan.BankEven_MessagesReceived WHERE BankEven = :%d(0) AND element_key = :%d(3))
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE, id
	set %ROWCOUNT=0 set:'pInternal %qrc=0 do %0Lo
	do $zu(115,5,rtm) quit:pInternal $g(id) if SQLCODE { set:SQLCODE<0 %qrc=-SQLCODE set:'%ROWCOUNT&&(SQLCODE=100) id="",%qrc=0 } set d=$zobjexport(id,18) QUIT
	Quit
 q
%0Lo n sqldata10d,sqldata11d,sqldata12d,sqldata14d,sqldata4d,sqldata6d,sqldata3d,sqldata5d,sqldata1d,sqldata8d
 s $zt="%0Lerr"
 s sqldata10d=$zu(115,2)
 s sqldata11d=0,sqldata12d=""
 d:$zu(115,15) $system.ECP.Sync()
 s sqldata4d=$s($zu(115,5)=2:$select($g(%d(0))="":"",$g(%d(0))=$c(0)&&$zu(115,13):"",1:$s($in($g(%d(0)),"","")'="":+$in($g(%d(0)),"",$g(%d(0))),1:$g(%d(0)))),1:$g(%d(0))),sqldata4d=$s(sqldata4d="":"",$isvalidnum(sqldata4d):+sqldata4d,1:sqldata4d),sqldata6d=$g(%d(3))
 s SQLCODE=100
 ; asl MOD# 2
 s sqldata3d=sqldata4d
 s sqldata5d=sqldata6d
 i sqldata3d'="" s sqldata14d="" i $d(^Ens.BusinessProcessD(sqldata3d),sqldata14d)
 i '$t
 e  i $lg(sqldata14d,1)'[($e($lg(sqldata14d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata14d,1)))
 i  g %0LmBdun
 i sqldata5d="" g %0LmBdun
 i '$d(^Ens.BusinessProcessD(sqldata3d,"received",sqldata5d)) g %0LmBdun
 s sqldata1d=(sqldata3d)_"||"_(sqldata5d),id=$s($zu(115,5)=2:$tr(sqldata1d,$c(0),""),1:sqldata1d)
 goto:sqldata10d'=1 %0LmBuncommitted
 if sqldata10d=1 {
 	lock +^Ens.BusinessProcessD($p(sqldata1d,"||",1),"received",$p(sqldata1d,"||",2))#"S":$zu(115,4)
 	if $t { set sqldata12d=$name(^Ens.BusinessProcessD($p(sqldata1d,"||",1),"received",$p(sqldata1d,"||",2)))_"#""SI""",sqldata11d=1 }
 	else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table Demo_Loan.BankEven_MessagesReceived for RowID value: "_sqldata1d ztrap "LOCK"  }
 }
 ; asl MOD# 3
 s sqldata8d=$p(sqldata1d,"||"),sqldata5d=$p(sqldata1d,"||",2)
 i sqldata8d'="" s sqldata14d="" i $d(^Ens.BusinessProcessD(sqldata8d),sqldata14d)
 i '$t
 e  i $lg(sqldata14d,1)'[($e($lg(sqldata14d,1))_"Demo.Loan.BankEven"_$e($lg(sqldata14d,1)))
 i '$t,sqldata5d'="",$d(^Ens.BusinessProcessD(sqldata8d,"received",sqldata5d))
 e  g %0LmCdun
 s id=$s($zu(115,5)=2:$tr(sqldata1d,$c(0),""),1:sqldata1d)
 s sqldata3d=$p(sqldata1d,"||")
%0LmBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LmCdun if $g(sqldata10d)=1 { if $g(sqldata11d)=1 { l -@sqldata12d s sqldata11d=0 } elseif $g(sqldata11d)=2 { do $classmethod($li(sqldata12d),"%UnlockId",$li(sqldata12d,2),1,1)  s sqldata11d=0 } }
%0LmBdun 
%0LmAdun 
%0Lc s %ROWCOUNT='SQLCODE
 if $g(sqldata10d)=1 { if $g(sqldata11d)=1 { l -@sqldata12d } elseif $g(sqldata11d)=2 { do $classmethod($li(sqldata12d),"%UnlockId",$li(sqldata12d,2),1,1)  } }
 q
%0Lerr s $zt=""
 d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg)
 g %0Lc
